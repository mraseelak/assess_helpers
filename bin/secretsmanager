#!/usr/bin/env ruby
# frozen_string_literal: true

require 'rubygems'
require 'commander/import'
require_relative '../lib/test_helpers/AWS/secrets_manager'

program :name, 'secretsmanager'
program :version, '0.0.1'
program :description, 'Retrieve secret value associated with the secret_id and key provided'

command :get_secret_for do |c|
  c.syntax = 'secretsmanager get_secret_for [options]'
  c.summary = 'Used to retrieve secret value associated with the secret_id and key provided'
  c.description = 'Retrieve secret value associated with the secret_id and key provided'
  c.example 'description', 'command example'
  c.option '--access_key_id STRING', String, 'AWS Access Key id'
  c.option '--secret_access_key STRING', String, 'AWS Secret Access Key '
  c.option '--session_token STRING OPTIONAL', String, 'AWS session Token'
  c.option '--region STRING', String, 'AWS region Default is us-east-1'
  c.option '--secret_id STRING', String, 'Name of the secret collection'
  c.option '--key STRING', String, 'Key within the secret collection whose value is required'

  c.action do |_args, options|
    region = options.region || 'us-east-1'
    new_option = {
      access_key_id: options.access_key_id,
      secret_access_key: options.secret_access_key,
      session_token: options.session_token,
      region: region,
      secret_id: options.secret_id
    }
    say TestHelpers::AWS::SecretsManager.new(new_option).get_value(options.key)
  end
end

command :get_all_secrets do |c|
  c.syntax = 'secretsmanager get_secret_for [options]'
  c.summary = 'Used to retrieve secret value associated with the secret_id and key provided'
  c.description = 'Retrieve secret value associated with the secret_id and key provided'
  c.example 'description', 'command example'
  c.option '--access_key_id STRING', String, 'AWS Access Key id'
  c.option '--secret_access_key STRING', String, 'AWS Secret Access Key '
  c.option '--session_token STRING', String, 'AWS session Token'
  c.option '--region STRING', String, 'AWS region Default is us-east-1'
  c.option '--secret_id STRING', String, 'Name of the secret collection'

  c.action do |_args, options|
    region = options.region || 'us-east-1'
    new_option = {
      access_key_id: options.access_key_id,
      secret_access_key: options.secret_access_key,
      session_token: options.session_token,
      region: region,
      secret_id: options.secret_id
    }
    say TestHelpers::AWS::SecretsManager.new(new_option).get_all
  end
end
